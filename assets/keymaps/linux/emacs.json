//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
//
// Used this https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf
[
  {
<<<<<<< HEAD
    //"context": "Workspace",
=======
    "context": "Editor",
    "bindings": {
      "ctrl-g": "editor::Cancel",
      "ctrl-shift-g": "go_to_line::Toggle",
      //"ctrl-space": "editor::SetMark",
      "ctrl-x u": "editor::Undo",
      "ctrl-x ctrl-u": "editor::Redo",
      "ctrl-f": "editor::MoveRight",
      "ctrl-b": "editor::MoveLeft",
      "ctrl-n": "editor::MoveDown",
      "ctrl-p": "editor::MoveUp",
      "home": ["editor::MoveToBeginningOfLine", { "stop_at_soft_wraps": false }],
      "end": ["editor::MoveToEndOfLine", { "stop_at_soft_wraps": false }],
      "ctrl-a": ["editor::MoveToBeginningOfLine", { "stop_at_soft_wraps": false }],
      "ctrl-e": ["editor::MoveToEndOfLine", { "stop_at_soft_wraps": false }],
      "alt-f": "editor::MoveToNextSubwordEnd",
      "alt-b": "editor::MoveToPreviousSubwordStart",
      "ctrl-d": "editor::Delete",
      "alt-d": "editor::DeleteToNextWordEnd",
      "ctrl-k": "editor::CutToEndOfLine",
      "ctrl-w": "editor::Cut",
      "alt-w": "editor::Copy",
      "ctrl-y": "editor::Paste",
      "ctrl-_": "editor::Undo",
      "ctrl-v": "editor::MovePageDown",
      "alt-v": "editor::MovePageUp",
      "ctrl-x ]": "editor::MoveToEnd",
      "ctrl-x [": "editor::MoveToBeginning",
      "ctrl-l": "editor::ScrollCursorCenterTopBottom",
      "ctrl-s": "buffer_search::Deploy",
      "ctrl-x ctrl-f": "file_finder::Toggle",
      "ctrl-shift-r": "editor::Rename"
    }
  },
  {
    "context": "Workspace",
>>>>>>> ebf6804afd3eb30d8f80535f00bcb8b3c3b0ddf7
    "bindings": {
      "ctrl-s": null,
      "alt-x": "command_palette::Toggle",
      "ctrl-g": ["workspace::SendKeystrokes", "escape"],
      "ctrl-x k": "pane::CloseActiveItem",
      "ctrl-x ctrl-c": "zed::Quit",
      "ctrl-x o": "workspace::ActivateNextPane",
      "ctrl-x b": "tab_switcher::Toggle",
      "ctrl-x 0": "pane::CloseActiveItem",
      "ctrl-x 1": "workspace::ToggleZoom", // "pane::CloseInactiveItems",
      "ctrl-x 2": "pane::SplitDown", // split-window-below
      "ctrl-x 3": "pane::SplitRight", // sprlit-window-right
      // "": "pane::SplitVertical", // split-window-vertically
      // "ctrl-x W 2": "", // split-root-window-below
      // "ctrl-x W 3": "" // split-root-window-right
      "ctrl-x ctrl-f": "file_finder::Toggle",
      "ctrl-x ctrl-s": "workspace::Save",
      "ctrl-x ctrl-w": "workspace::SaveAs",
      "ctrl-x s": "workspace::SaveAll",
      "ctrl-x p g": "pane::DeploySearch" // project-find-regexp:
    }
  },
  {
    "context": "Editor || AssistantPanel",
    "bindings": {
      "ctrl-g": ["workspace::SendKeystrokes", "escape"], // "ctrl-g": "editor::Cancel",
      "alt-g g": "go_to_line::Toggle",
      //"ctrl-space": "vim::ToggleVisual",
      "ctrl-/": "editor::Undo",
      "ctrl-shift-/": "editor::Redo",
      "ctrl-x u": "editor::Undo",
      "ctrl-x ctrl-u": "editor::Redo",
      "ctrl-_": "editor::Undo",
      "ctrl-f": "editor::MoveRight",
      "ctrl-b": "editor::MoveLeft",
      "ctrl-n": ["workspace::SendKeystrokes", "down"], // This trick prevents creating new file at the end of buffer
      "ctrl-p": ["workspace::SendKeystrokes", "up"],
      "ctrl-a": "editor::MoveToBeginningOfLine", // move-beginning-of-line
      "ctrl-e": "editor::MoveToEndOfLine", // move-end-of-line
      "alt-f": "editor::MoveToNextSubwordEnd",
      "alt-b": "editor::MoveToPreviousSubwordStart",
      "ctrl-d": "editor::Delete", // delete-char
      "alt-d": "editor::DeleteToNextWordEnd",
      "ctrl-k": "editor::CutToEndOfLine", // kill-line
      "ctrl-w": "editor::Cut", // kill-region
      "alt-w": "editor::Copy",
      "ctrl-y": "editor::Paste",
      "ctrl-v": "editor::MovePageDown",
      "alt-v": "editor::MovePageUp",
      "alt->": "editor::MoveToEnd", // end-of-buffer
      "alt-<": "editor::MoveToBeginning", // beginning-of-buffer
      "ctrl-l": "editor::ScrollCursorCenterTopBottom",
      "ctrl-s": "buffer_search::Deploy",
      "ctrl-x ctrl-f": "file_finder::Toggle", // find-file
      //"ctrl-x x r": "editor::?", // rename-buffer
      "alt-x": "command_palette::Toggle",
      "ctrl-x ctrl-;": "editor::ToggleComments", // comment-line
      "ctrl-c c": "task::Spawn", // Compile command
      "alt-{": "editor::MoveToStartOfParagraph",
      "alt-}": "editor::MoveToEndOfParagraph",
      "ctrl-x t 0": "pane::CloseActiveItem", // tab-bar-close-tab
      "ctrl-x t 1": "workspace::CloseInactiveTabsAndPanes", // tab-bar-close-tab-select
      "ctrl-x t 2": "workspace::NewFile", // tab-bar-new-tab
      "ctrl-x t o": "pane::ActivateNextItem", // tab-bar-tab-next
      "ctrl-tab": "pane::ActivateNextItem", // tab-bar-tab-next
      "shift-ctrl-tab": "pane::ActivatePrevItem" // tab-bar-tab-previous
    }
  },
  {
    "context": "BufferSearchBar > Editor",
    "bindings": {
      "ctrl-s": "search::SelectNextMatch",
      "ctrl-r": "search::SelectPrevMatch",
      "ctrl-g": "buffer_search::Dismiss"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "ctrl-x left": "pane::GoBack",
      "ctrl-x right": "pane::GoForward"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-g": ["terminal::SendKeystroke", "escape"],
      "alt-w": "terminal::Copy",
      "ctrl-y": "terminal::Paste",
      "ctrl-b": ["terminal::SendKeystroke", "left"],
      "ctrl-x o": "workspace::ActivateNextPane",
      "ctrl-x b": "tab_switcher::Toggle",
      "up": ["terminal::SendKeystroke", "up"],
      "pageup": ["terminal::SendKeystroke", "pageup"],
      "down": ["terminal::SendKeystroke", "down"],
      "pagedown": ["terminal::SendKeystroke", "pagedown"],
      "escape": ["terminal::SendKeystroke", "escape"],
      "ctrl-k": ["terminal::SendKeystroke", "ctrl-k"]
      //"shift-right": "terminal::SelectRight", // Not exist yet
      //"shift-left": "terminal::SelectLeft" // Not exist yet
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "ctrl-s": "search::SelectNextMatch", // Not working
      "ctrl-r": "search::SelectPrevMatch"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "ctrl-x k": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {}
  }
]
