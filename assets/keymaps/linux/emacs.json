//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
//
// Used this https://www.gnu.org/software/emacs/refcards/pdf/refcard.pdf
// Default: https://github.com/zed-industries/zed/blob/main/assets/keymaps/default-linux.json
//
[
  {
    "context": "Editor || AssistantPanel",
    "bindings": {
      "ctrl-g": ["workspace::SendKeystrokes", "escape"], // "ctrl-g": "editor::Cancel",
      //"ctrl-space": "editor::SetMark",
      "ctrl-space": "vim::ToggleVisual",
      "ctrl-shift-/": "editor::Redo",
      "ctrl-x ctrl-u": "editor::Redo",
      "ctrl-n": ["workspace::SendKeystrokes", "down"], // This trick prevents creating new file at the end of buffer
      "ctrl-p": ["workspace::SendKeystrokes", "up"],
      "ctrl-x ctrl-f": "file_finder::Toggle", // find-file
      //"ctrl-x x r": "editor::?", // rename-buffer
      "alt-x": "command_palette::Toggle",
      "ctrl-c c": "task::Spawn", // Compile command
      "alt-{": "editor::MoveToStartOfParagraph",
      "alt-}": "editor::MoveToEndOfParagraph",
      "ctrl-x t 0": "pane::CloseActiveItem", // tab-bar-close-tab
      "ctrl-x t 1": "workspace::CloseInactiveTabsAndPanes", // tab-bar-close-tab-select
      "ctrl-x t 2": "workspace::NewFile", // tab-bar-new-tab
      "ctrl-x t o": "pane::ActivateNextItem", // tab-bar-tab-next
      "ctrl-tab": "pane::ActivateNextItem", // tab-bar-tab-next
      "shift-ctrl-tab": "pane::ActivatePrevItem", // tab-bar-tab-previous
      "ctrl-x b": "tab_switcher::Toggle", // switch-to-buffer
      "alt-g g": "go_to_line::Toggle", // goto-line
      "alt-g alt-g": "go_to_line::Toggle", // goto-line
      "ctrl-f": "editor::MoveRight", // forward-char
      "ctrl-b": "editor::MoveLeft", // backward-char
      "home": [
        "editor::MoveToBeginningOfLine",
        { "stop_at_soft_wraps": false }
      ], // move-beginning-of-line
      "end": ["editor::MoveToEndOfLine", { "stop_at_soft_wraps": false }], // move-end-of-line
      "ctrl-a": [
        "editor::MoveToBeginningOfLine",
        { "stop_at_soft_wraps": false }
      ], // move-beginning-of-line
      "ctrl-e": ["editor::MoveToEndOfLine", { "stop_at_soft_wraps": false }], // move-end-of-line
      "alt-f": "editor::MoveToNextSubwordEnd", // forward-word
      "alt-b": "editor::MoveToPreviousSubwordStart", // backward-word
      "alt-u": "editor::ConvertToUpperCase", // upcase-word
      "alt-l": "editor::ConvertToLowerCase", // downcase-word
      "alt-c": "editor::ConvertToUpperCamelCase", // capitalize-word
      "alt-;": ["editor::ToggleComments", { "advance_downwards": false }], // comment-line
      "ctrl-x ctrl-;": "editor::ToggleComments", // comment-line
      "alt-.": "editor::GoToDefinition", // xref-find-definitions
      "alt-,": "pane::GoBack", // xref-pop-marker-stack
      "ctrl-x h": "editor::SelectAll", // mark-whole-buffer
      "ctrl-d": "editor::Delete", // delete-char
      "alt-d": "editor::DeleteToNextWordEnd", // kill-word
      "ctrl-k": "editor::KillRingCut", // kill-line
      "ctrl-w": "editor::Cut", //
      "alt-w": "editor::Copy", //
      "ctrl-y": "editor::Paste", // yank
      "ctrl-_": "editor::Undo", // undo
      "ctrl-/": "editor::Undo", // undo
      "ctrl-x u": "editor::Undo", // undo
      "ctrl-v": "editor::MovePageDown", // scroll-up
      "alt-v": "editor::MovePageUp", // scroll-down
      "ctrl-x [": "editor::MoveToBeginning", // beginning-of-buffer
      "ctrl-x ]": "editor::MoveToEnd", // end-of-buffer
      "alt-<": "editor::MoveToBeginning", // beginning-of-buffer
      "alt->": "editor::MoveToEnd", // end-of-buffer
      "ctrl-l": "editor::ScrollCursorCenterTopBottom", // recenter-top-bottom
      "ctrl-s": "buffer_search::Deploy", // isearch-forward
      "alt-^": "editor::JoinLines" // join-line
    }
  },
  {
    "context": "Workspace && !Terminal",
    "bindings": {
      "ctrl-x ctrl-c": "zed::Quit", // save-buffers-kill-terminal
      "ctrl-x 5 0": "workspace::CloseWindow", // delete-frame
      "ctrl-x 5 2": "workspace::NewWindow", // make-frame-command
      "ctrl-x o": "workspace::ActivateNextPane", // other-window
      "ctrl-x k": "pane::CloseActiveItem", // kill-buffer
      "ctrl-x 0": "pane::CloseActiveItem", // delete-window
      "ctrl-x 1": "pane::CloseInactiveItems", // delete-other-windows
      "ctrl-x 2": "pane::SplitDown", // split-window-below
      "ctrl-x 3": "pane::SplitRight", // split-window-right
      "ctrl-x ctrl-f": "file_finder::Toggle", // find-file
      "ctrl-x ctrl-s": "workspace::Save", // save-buffer
      "ctrl-x ctrl-w": "workspace::SaveAs", // write-file
      "ctrl-x s": "workspace::SaveAll" // save-some-buffers
    }
  },
  {
    "context": "BufferSearchBar > Editor",
    "bindings": {
      "ctrl-s": "search::SelectNextMatch",
      "ctrl-r": "search::SelectPrevMatch",
      "ctrl-g": "buffer_search::Dismiss"
    }
  },
  {
    "context": "Pane",
    "bindings": {
      "ctrl-x left": "pane::GoBack",
      "ctrl-x right": "pane::GoForward"
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      "ctrl-g": ["terminal::SendKeystroke", "escape"],
      "alt-w": "terminal::Copy",
      "ctrl-y": "terminal::Paste",
      "ctrl-b": ["terminal::SendKeystroke", "left"],
      "ctrl-x o": "workspace::ActivateNextPane",
      "ctrl-x b": "tab_switcher::Toggle",
      "up": ["terminal::SendKeystroke", "up"],
      "pageup": ["terminal::SendKeystroke", "pageup"],
      "down": ["terminal::SendKeystroke", "down"],
      "pagedown": ["terminal::SendKeystroke", "pagedown"],
      "escape": ["terminal::SendKeystroke", "escape"],
      "ctrl-k": ["terminal::SendKeystroke", "ctrl-k"]
      //"shift-right": "terminal::SelectRight", // Not exist yet
      //"shift-left": "terminal::SelectLeft" // Not exist yet
    }
  },
  {
    "context": "BufferSearchBar",
    "bindings": {
      "ctrl-s": "search::SelectNextMatch", // Not working
      "ctrl-r": "search::SelectPrevMatch"
    }
  },
  {
    "context": "ProjectPanel",
    "bindings": {
      "ctrl-x k": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "TabSwitcher",
    "bindings": {}
  },

  // MYVIM
  {
    "context": "VimControl",
    "bindings": {
      "l": "vim::Up",
      "h": "vim::Down",
      "k": "vim::Right",
      "j": "vim::Left",
      "!": "task::Spawn",
      //
      "ctrl-n": "editor::ShowCompletions"
    }
  },
  {
    "context": "vim_mode == insert",
    "bindings": {
      "ctrl-x": null,
      "ctrl-x ctrl-c": "workspace::CloseWindow",
      "alt-x": "command_palette::Toggle",
      "ctrl-g": ["workspace::SendKeystrokes", "escape"],
      "ctrl-x ctrl-s": "workspace::Save",
      "ctrl-x ctrl-f": "file_finder::Toggle",
      "ctrl-a": "editor::MoveToBeginningOfLine",
      "ctrl-e": "editor::MoveToEndOfLine",

      "ctrl-x u": "editor::Undo",
      "ctrl-x ctrl-u": "editor::Redo",
      "ctrl-f": "editor::MoveRight",
      "ctrl-b": "editor::MoveLeft",
      "ctrl-n": "editor::MoveDown",
      "ctrl-p": "editor::MoveUp",
      "ctrl-d": "editor::Delete",
      "alt-d": "editor::DeleteToNextWordEnd",
      "ctrl-k": "editor::DeleteLine",
      "ctrl-w": "editor::Cut",
      "alt-w": "editor::Copy",
      "ctrl-y": "editor::Paste",
      "ctrl-;": "editor::ToggleComments"
    }
  }
]
